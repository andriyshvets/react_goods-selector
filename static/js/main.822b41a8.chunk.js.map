{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGoods","item","setState","prevState","removeGood","filter","elem","resetSelected","this","renderMessage","length","slice","join","className","map","good","isActive","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,SAAW,SAACC,GACV,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAInEM,cAAgB,WACd,EAAKL,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cACJU,EAAgB,WAQpB,OANIV,EAAcW,OAAS,EACzBD,EAAa,UAAMV,EAAcY,MAAM,GAAI,GAAGC,KAAK,MAAtC,gBAAmDb,EAAcA,EAAcW,OAAS,GAAxF,QACqB,IAAzBX,EAAcW,SACvBD,EAAa,UAAMV,EAAc,GAApB,QAIb,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,kCACqBJ,EADrB,eAIA,oBAAII,UAAU,OAAd,SACGjB,EAAgBkB,KAAI,SAAAC,GACnB,IAAMC,EAAW,EAAKlB,MAAMC,cAAckB,SAASF,GAEnD,OACE,qBAAeF,UAAU,aAAzB,UACGE,EACD,wBACEG,KAAK,SACLC,QAASH,EACL,kBAAM,EAAKZ,WAAWW,IACtB,kBAAM,EAAKf,SAASe,IACxBF,UAAU,eALZ,SAOGG,EAAW,SAAW,aATlBD,QAgBf,wBACEG,KAAK,SACLC,QAASX,KAAKD,cACdM,UAAU,eAHZ,0B,GA1DUO,IAAMC,WAsETxB,ICzFfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.822b41a8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGoods = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n  };\n\n  removeGood = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(elem => elem !== item),\n    }));\n  };\n\n  resetSelected = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    let renderMessage = 'No goods';\n\n    if (selectedGoods.length > 1) {\n      renderMessage = `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are`;\n    } else if (selectedGoods.length === 1) {\n      renderMessage = `${selectedGoods[0]} is`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {`Selected good: ${renderMessage} selected`}\n        </h1>\n\n        <ul className=\"list\">\n          {goodsFromServer.map(good => {\n            const isActive = this.state.selectedGoods.includes(good);\n\n            return (\n              <li key={good} className=\"list__item\">\n                {good}\n                <button\n                  type=\"button\"\n                  onClick={isActive\n                    ? () => this.removeGood(good)\n                    : () => this.addGoods(good)}\n                  className=\"list__button\"\n                >\n                  {isActive ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.resetSelected}\n          className=\"list__button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}